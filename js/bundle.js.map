{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://food/./js/modules/modal.js","webpack://food/./js/script.js","webpack://food/./js/modules/tabs.js","webpack://food/./js/modules/timer.js","webpack://food/./js/modules/cards.js","webpack://food/./js/services/services.js","webpack://food/./js/modules/forms.js","webpack://food/./js/modules/calc.js","webpack://food/./js/modules/slider.js"],"sourcesContent":["function plusModal(modalSelector, timer) {\r\n    const modalWindow = document.querySelector(modalSelector);\r\n\r\n    modalWindow.classList.add('show');\r\n    modalWindow.classList.remove('hide');\r\n    document.body.style.overflow = 'hidden';\r\n    \r\n    if (timer) {\r\n        clearInterval(timer);\r\n    }\r\n}\r\n//                                                                          -> функция для отображения мод. окна\r\nfunction minusModal(modalSelector) {\r\n    const modalWindow = document.querySelector(modalSelector);\r\n\r\n    modalWindow.classList.add('hide');\r\n    modalWindow.classList.remove('show');\r\n    document.body.style.overflow = '';\r\n}\r\n//                                                                          -> функция для скрытия мод. окна\r\n\r\n// МОДАЛЬНОЕ ОКНО:\r\nfunction modal(triggerSelector, modalSelector, timer) {\r\n    const btnСonnection = document.querySelectorAll(triggerSelector),\r\n          modalWindow = document.querySelector(modalSelector); \r\n\r\n    btnСonnection.forEach(item => {\r\n        item.addEventListener('click', () => plusModal(modalSelector, timer));\r\n    });\r\n    //                                                                      -> при клике на кнопки отобразится мод. окно\r\n    modalWindow.addEventListener('click', (e) => {\r\n        const target = e.target;\r\n\r\n        if (target === modalWindow || target.getAttribute('data-close') == '') {\r\n            minusModal(modalSelector);\r\n        }\r\n    });\r\n    //                                                                      -> при клике на задний фон или крестик скроется мод. окно\r\n    document.addEventListener('keydown', (e) => {\r\n        if (e.code === 'Escape' && modalWindow.classList.contains('show')) {\r\n            minusModal(modalSelector);\r\n        }\r\n    });\r\n    //                                                                      -> при нажатии ESC на клавиатуре мод. окно скроется\r\n   \r\n    function showModalByScroll() {\r\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\r\n            plusModal(modalSelector, timer);\r\n            window.removeEventListener('scroll', showModalByScroll);\r\n        }\r\n    }\r\n    //                                                                      -> функция, отображающая мод. окно после долистывания пользователем сайта до конца (срабатывает 1 раз)\r\n    window.addEventListener('scroll', showModalByScroll);\r\n}\r\n\r\nexport default modal;\r\nexport {plusModal, minusModal};","'use strict';\r\n\r\nimport tabs from './modules/tabs';\r\nimport modal from './modules/modal';\r\nimport timer from './modules/timer';\r\nimport cards from './modules/cards';\r\nimport forms from './modules/forms';\r\nimport calc from './modules/calc';\r\nimport slider from './modules/slider';\r\n//                                                                          -> импорты всегда вверху \r\nimport {plusModal} from './modules/modal';                                  /* отдельно импортируем ф. plusModal, чтобы использовать её в modalTimerId */\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    const modalTimerId = setTimeout(() => plusModal('.modal', modalTimerId), 50000);\r\n    //                                                                      -> через 50 секунд нахождения пользователя на сайте появится мод. окно\r\n\r\n    tabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\r\n    modal('[data-modal]', '.modal', modalTimerId);\r\n    timer('.timer', '2022-09-25');\r\n    cards();\r\n    forms('form', modalTimerId);\r\n    calc();\r\n    slider({                                                                /* аргументы передадим слайдеру(модулю) в кач-ве объекта с настройками. Внутри модуля ф. slider передадим их в кач-ве параметров, дестректурируя объект настроек */\r\n        prevArrow: '.offer__slider-prev',\r\n        nextArrow: '.offer__slider-next',\r\n        currentCounter: '#current',\r\n        totalCounter: '#total',\r\n        wrapper: '.offer__slider-wrapper',\r\n        field: '.offer__slider-inner',\r\n        slide: '.offer__slide',\r\n        container: '.offer__slider'\r\n    });\r\n});","// ТАБЫ:\r\nfunction tabs(tabSelector, tabcontentSelector, parentSelector, classActive) {\r\n    const tabs = document.querySelectorAll(tabSelector),                                 \r\n          tabsContent = document.querySelectorAll(tabcontentSelector),\r\n          tabsParent = document.querySelector(parentSelector);\r\n    //                                                                    -> получаем нужные элементы со страницы\r\n    function hideTabsContent() {\r\n        tabsContent.forEach(item => {\r\n            item.classList.add('hide');\r\n            item.classList.remove('show', 'fade');\r\n        });\r\n        tabs.forEach(item => {\r\n            item.classList.remove(classActive);\r\n        });\r\n    }\r\n    //                                                                    -> hideTabsContent() будет скрывать все табы\r\n    function showTabsContent(i = 0) {\r\n        tabsContent[i].classList.add('show', 'fade');\r\n        tabsContent[i].classList.remove('hide');\r\n        tabs[i].classList.add(classActive);\r\n    }\r\n    //                                                                    -> showTabsContent() будет показывать табы (i = 0 - ЕСЛИ ФУНКЦИЯ ВЫЗЫВАЕТСЯ БЕЗ АРГУМЕНТА, ТО ПО УМОЛЧАНИЮ ОН БУДЕТ НОЛЬ. ПРИ ЗАГРУЗКЕ СТР. ОТОБРАЗИТСЯ ПЕРВЫЙ ТАБ)\r\n    hideTabsContent();\r\n    showTabsContent();\r\n    //                                                                    -> вызываем эти функции\r\n    tabsParent.addEventListener('click', (event) => {\r\n        const target = event.target;\r\n        \r\n        tabs.forEach((item, i) => {\r\n            if (target == item) {\r\n                hideTabsContent();\r\n                showTabsContent(i);\r\n            }\r\n        });\r\n    });\r\n    //                                                                    -> если объект события эемента, на который пришло событие КЛИК равен элементу, перебираемому в данный момент методом forEach - то выполнятся функции скрытия табов и отображения таба с индексом данного элемента, в качестве аргумента! \r\n}\r\n\r\nexport default tabs;","// ТАЙМЕР:\r\nfunction timer(id, deadline) {\r\n    function getTimeRemaining(endtime) {\r\n        const r = Date.parse(endtime) - Date.parse(new Date());\r\n        let days, hours, minutes, seconds;\r\n\r\n        if (r <= 0) {\r\n            days = 0;\r\n            hours = 0;\r\n            minutes = 0;\r\n            seconds = 0;\r\n        } else {\r\n            days = Math.floor(r / 1000 / 60 / 60 / 24);\r\n            hours = Math.floor(r / 1000 / 60 / 60 % 24);\r\n            minutes = Math.floor(r / 1000 / 60 % 60);\r\n            seconds = Math.floor(r / 1000 % 60);\r\n        }\r\n        \r\n        return {\r\n            'total': r,\r\n            'days': days,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds\r\n        };\r\n    }\r\n    //                                                                      -> функция  getTimeRemaining возвращает объект с разницей м/у реальным временем и отправной точкой(в ms), так же вычисленные дни/часы/минуты/секунды \r\n    function getZero(num) {\r\n        if (num >= 0 && num < 10) {\r\n            return `0${num}`;\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n    //                                                                      -> функция getZero приплюсовывает нолик спереди к числам в днях/часах/минутах/секундах, если они меньше 10\r\n    function setClock(selector, endtime) {\r\n        const timer = document.querySelector(selector),\r\n              days = timer.querySelector('#days'),\r\n              hours = timer.querySelector('#hours'),\r\n              minutes = timer.querySelector('#minutes'),\r\n              seconds = timer.querySelector('#seconds'),\r\n              timeInterval = setInterval(updateClock, 1000);\r\n\r\n        updateClock();\r\n        \r\n        function updateClock() {\r\n            const t = getTimeRemaining(endtime);\r\n\r\n            days.innerHTML =  getZero(t.days);\r\n            hours.innerHTML =  getZero(t.hours);\r\n            minutes.innerHTML =  getZero(t.minutes);\r\n            seconds.innerHTML =  getZero(t.seconds);\r\n\r\n            if (t.total <= 0) {\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n        //                                                                  -> функция updateClock ежесекундно обновляет таймер на странице, благодаря setInterval, который прописан выше. Благодаря этому и виден обратный отсчёт на странице\r\n    }\r\n    //                                                                      -> функция setClock устанавливает таймер на странице\r\n    setClock(id, deadline);\r\n}\r\n\r\nexport default timer;","import {getResource} from '../services/services';\r\n// КЛАССЫ ДЛЯ КАРТОЧЕК:\r\nfunction cards() {\r\n    class MenuCard {\r\n        constructor(src, alt, title, descr, price, parentSelector, ...classes) {\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.parent = document.querySelector(parentSelector);           /* получаем родителя со страницы */\r\n            this.classes = classes;\r\n            this.transfer = 27;                                             /* курс доллара */\r\n            this.changeToUAH();                                             \r\n        }\r\n\r\n        changeToUAH() {                                                     /* данный метод переводит доллары в гривны */\r\n            this.price = this.price * this.transfer;\r\n        }\r\n\r\n        rander() {                                                          /* данный метод динамически создаёт карточки */\r\n            const elem = document.createElement('div');\r\n            \r\n            if (this.classes.length === 0) {                                /* если в рест-оператор не указали классы, для карточки (пустой массив), то будет по-умолч. присвоен класс */\r\n                this.elementClass = 'menu__item';\r\n                elem.classList.add(this.elementClass);\r\n            } else {                                                        /* рест-оператор - массив с классами. Каждый из этих переданных классов назначаем карточке */\r\n                this.classes.forEach(className => {\r\n                    elem.classList.add(className);\r\n                });\r\n            }\r\n            \r\n            elem.innerHTML = `\r\n                <img src=${this.src} alt=${this.alt}>\r\n                <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                <div class=\"menu__item-descr\">${this.descr}</div>\r\n                <div class=\"menu__item-divider\"></div>\r\n                <div class=\"menu__item-price\">\r\n                    <div class=\"menu__item-cost\">Цена:</div>\r\n                    <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n                </div>\r\n            `;\r\n            this.parent.append(elem);\r\n        }\r\n    }\r\n\r\n    getResource('http://localhost:3000/menu')\r\n        .then(data => {\r\n            data.forEach(({img, alt, title, descr, price}) => {\r\n                new MenuCard(img, alt, title, descr, price, '.menu .container').rander();\r\n            });\r\n        });\r\n}\r\n\r\nexport default cards;","const getResource = async (url) => {\r\n    const res = await fetch(url);\r\n\r\n    if(!res.ok) {\r\n        throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n    }\r\n\r\n    return await res.json();\r\n};\r\n//                                                                         -> getResource - функция для получения данных с сервера\r\nconst postData = async (url, data) => {                                                      \r\n    const res = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        body: data\r\n    });\r\n\r\n    return await res.json();\r\n};\r\n//                                                                          -> postData - функция для постинга данных\r\nexport {getResource, postData};","import {plusModal, minusModal} from './modal';\r\nimport {postData} from '../services/services';\r\n// ОТПРАВКА ДАННЫХ НА СЕРВЕР ИЗ ФОРМ С ПОМОЩЬЮ AJAX:\r\nfunction forms(formSelector, modalTimerId) {\r\n    const forms = document.querySelectorAll(formSelector),\r\n          message = {\r\n              loading: 'img/spinner/spinner.svg',\r\n              success: 'Спасибо! Скоро мы с Вами свяжемся',\r\n              failure: 'Что-то пошло не так...'\r\n          };\r\n\r\n    forms.forEach(item => {\r\n        bindPostData(item);\r\n    });\r\n\r\n    function bindPostData(form) {\r\n        form.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n\r\n            const statusMessage = document.createElement('img');                                    /* динамически создаём и настраиваем спиннер загрузки */\r\n            statusMessage.style.cssText = 'display: block; margin: 0 auto;';\r\n            statusMessage.src = message.loading;\r\n            form.insertAdjacentElement('afterend', statusMessage);                                  /* помещаем спиннер ПОСЛЕ формы */\r\n\r\n            const formData = new FormData(form),                                                    /* экземпляр объекта formData для формирования данных из форм */\r\n                  json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n\r\n            postData('http://localhost:3000/requests', json)\r\n            .then(data => {\r\n                console.log(data);\r\n                showThanksModal(message.success);\r\n                statusMessage.remove();\r\n            }).catch(() => {                                                                        /* catch - \"не успешно\" */\r\n                showThanksModal(message.failure);\r\n            }).finally(() => {                                                                      /* finally - \"в любом случае\" */\r\n                form.reset();\r\n            });                                                \r\n        });\r\n    }\r\n\r\n    function showThanksModal(message) {\r\n        const prevModalDialog = document.querySelector('.modal__dialog');\r\n        prevModalDialog.classList.add('hide');\r\n        prevModalDialog.classList.remove('show');\r\n        plusModal('.modal', modalTimerId);\r\n\r\n        const thanksModal = document.createElement('div');\r\n        thanksModal.classList.add('modal__dialog');\r\n        thanksModal.innerHTML = `\r\n            <div class=\"modal__content\">\r\n                <div data-close class=\"modal__close\">&times;</div>\r\n                <div class=\"modal__title\">${message}</div>\r\n            </div>      \r\n        `;\r\n        document.querySelector('.modal').append(thanksModal);\r\n        setTimeout(() => {                                                                          /* через 4 секунды удаляем динамически созданный блок и делаем видемым прежнее модальное окно. Сразу закрываем его */\r\n            thanksModal.remove();\r\n            prevModalDialog.classList.add('show');\r\n            prevModalDialog.classList.remove('hide');\r\n            minusModal('.modal');\r\n        }, 4000);\r\n    }\r\n    //                                                                                             -> функция, отображающая окно с сообщением (благодарность либо ошибка) после отправки данных пользователем на 4 секунды.\r\n}\r\n\r\nexport default forms;","// КАЛЬКУЛЯТОР КАЛОРИЙ:\r\nfunction calc() {\r\n    const result = document.querySelector('.calculating__result span');\r\n    let sex, height, weight, age, ratio;\r\n\r\n    if (localStorage.getItem('sex')) {                                             /* если \"пол\" есть в ЛС - значение sex берется из ЛС */\r\n        sex = localStorage.getItem('sex');\r\n    } else {                                                                       /* в противном случае - значение sex по-умолч. 'female' и оно добавится в ЛС */\r\n        sex = 'female';\r\n        localStorage.setItem('sex', 'female');\r\n    }\r\n\r\n    if (localStorage.getItem('ratio')) {                                           /* если \"физ. активность\" есть в ЛС - значение ratio берется из ЛС */\r\n        ratio = localStorage.getItem('ratio');\r\n    } else {                                                                       /* в противном случае - значение ratio по-умолч. 1.375 и оно добавится в ЛС */\r\n        ratio = 1.375;\r\n        localStorage.setItem('ratio', 1.375);                                       \r\n    }\r\n\r\n    function calcTotal() {                                                         /* функция, производящая подсчёты */\r\n        if (!sex || !height || !weight || !age || !ratio) {\r\n            result.textContent = '?';\r\n            return;\r\n        }\r\n        if (sex === 'female') {                                                    /* для женщин: */\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n        } else {                                                                   /* для мужчин: */\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        }\r\n    }\r\n\r\n    calcTotal();\r\n\r\n    function initLocalSettings(selector, classActive) {                            /* функция, которая при открытии страницы проверяет локальное хранилище и устанавливает классы активности на те плашки, которые там сохранены (прошлый выбор пользователя) */\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.classList.remove(classActive);\r\n\r\n            if (elem.getAttribute('id') === localStorage.getItem('sex')) {\r\n                elem.classList.add(classActive);\r\n            }\r\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n                elem.classList.add(classActive);\r\n            }\r\n        });\r\n    }\r\n\r\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\r\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function getStaticInformation(selector, classActive) {                          /* функция, собирающая статичные данные (с плашек). Применима как для \"пол\", так и для \"физическая активность\" */\r\n        const elements = document.querySelectorAll(selector);                       /* получаем всевдомассив с плашками */\r\n\r\n        elements.forEach(elem => {\r\n            elem.addEventListener('click', (e) => {\r\n                if (e.target.getAttribute('data-ratio')) {                          /* если клик на плашку физ.активности -> берем из её дата-атрибута значение (там коэффициент) */\r\n                    ratio = +e.target.getAttribute('data-ratio');\r\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\r\n                } else {\r\n                    sex = e.target.getAttribute('id');                              /* если клик на плашку пола -> берем значение из её id */\r\n                    localStorage.setItem('sex', e.target.getAttribute('id'));\r\n                }\r\n\r\n                elements.forEach(elem => {                                          /* удаляем класс активности у каждого элемента */\r\n                    elem.classList.remove(classActive);\r\n                });\r\n\r\n                e.target.classList.add(classActive);                                /* добавляем класс активности элементу, на который кликнули */\r\n\r\n                calcTotal();                                                        /* запуск функции подсчёта */\r\n            });\r\n        });\r\n    }\r\n\r\n    getStaticInformation('#gender div', 'calculating__choose-item_active');                                         /* для плашек \"пол\" */\r\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');                        /* для плашек \"физ. активность\" */\r\n\r\n    function getDinamicInformation(selector) {\r\n        const input = document.querySelector(selector);\r\n\r\n        input.addEventListener('input', () => {\r\n            if (input.value.match(/\\D/g)) {                                         /* если введено что-то кроме чисел, то инпут будет подсвечиваться красной обводкой */\r\n                input.style.border = '1px solid red';\r\n            } else {\r\n                input.style.border = 'none';\r\n            }\r\n\r\n            switch(input.getAttribute('id')) {\r\n                case 'height':\r\n                    height = +input.value;\r\n                    break;\r\n                case 'weight':\r\n                    weight = +input.value;\r\n                    break;\r\n                case 'age':\r\n                    age = +input.value;\r\n                    break;\r\n            }\r\n\r\n            calcTotal();\r\n        });\r\n    }\r\n\r\n    getDinamicInformation('#height');\r\n    getDinamicInformation('#weight');\r\n    getDinamicInformation('#age');\r\n}\r\n\r\nexport default calc;","/* СЛАЙДЕР (вариант №1): \r\n    let sliderIndex = 1;\r\n    const prev = document.querySelector('.offer__slider-prev'),\r\n          next = document.querySelector('.offer__slider-next'),\r\n          current = document.querySelector('#current'),\r\n          total = document.querySelector('#total'),\r\n          slides = document.querySelectorAll('.offer__slide');\r\n\r\n    showSlider(sliderIndex);\r\n\r\n   if (slides.length < 10) {                                                   \r\n       total.textContent = `0${slides.length}`;\r\n   } else {\r\n       total.textContent = slides.length;\r\n   }\r\n\r\n    function showSlider(n) {\r\n        if (n > slides.length) {                                               \r\n            sliderIndex = 1;\r\n        }\r\n        if (n < 1) {                                                           \r\n            sliderIndex = slides.length;\r\n        }\r\n\r\n        slides.forEach(item => {                                               \r\n            item.classList.add('hide');\r\n            item.classList.remove('show', 'fade');\r\n        });\r\n\r\n        slides[sliderIndex - 1].classList.add('show', 'fade');                \r\n        slides[sliderIndex - 1].classList.remove('hide');\r\n\r\n        if (slides.length < 10) {                                              \r\n            current.textContent = `0${sliderIndex}`;\r\n        } else {\r\n            current.textContent = sliderIndex;\r\n        }\r\n    }\r\n\r\n    function plusSlides(n) {\r\n        showSlider(sliderIndex += n);\r\n    }\r\n\r\n    prev.addEventListener('click', () => {\r\n        plusSlides(-1);\r\n    });\r\n    next.addEventListener('click', () => {\r\n        plusSlides(1);\r\n    }); */\r\n\r\n// СЛАЙДЕР (вариант №2) с нав. точками:\r\nfunction slider({prevArrow, nextArrow, currentCounter, totalCounter, container, wrapper, field, slide, }) {\r\n    let sliderIndex = 1,\r\n        offset = 0;\r\n\r\n    const prev = document.querySelector(prevArrow),                             /* <- */\r\n          next = document.querySelector(nextArrow),                             /* -> */\r\n          current = document.querySelector(currentCounter),                     /* текущий слайд */\r\n          total = document.querySelector(totalCounter),                         /* всего слайдов */\r\n          slidesWrapper = document.querySelector(wrapper),                      /* обёртка слайдов */\r\n          slidesField = document.querySelector(field),                          /* поле со слайдами */\r\n          slides = document.querySelectorAll(slide),                            /* слайды */\r\n          width = window.getComputedStyle(slidesWrapper).width,                 /* получаем ширину обёртки слайдов */\r\n          slider = document.querySelector(container);                           /* слайдер целиком */\r\n\r\n    if (slides.length < 10) {                                                  \r\n        total.textContent = `0${slides.length}`;\r\n        current.textContent = `0${sliderIndex}`;\r\n    } else {\r\n        total.textContent = slides.length;\r\n        current.textContent = sliderIndex;\r\n    }\r\n\r\n    slidesField.style.cssText = `\r\n        width: calc(100% * ${slides.length}); \r\n        display: flex; \r\n        transition: 0.8s all;\r\n    `;\r\n\r\n    slidesWrapper.style.overflow = 'hidden';\r\n\r\n    slides.forEach(slide => {\r\n        slide.style.width = width;\r\n    });\r\n\r\n    slider.style.position = 'relative';                                         /* чтобы \"точки\" абсолютно спозиционировать */\r\n\r\n    const indicators = document.createElement('ol'),                            /* созд. динамически обёртку точкам */\r\n          dots = [];\r\n    indicators.classList.add('carousel-indicators');\r\n    slider.append(indicators);\r\n\r\n    for (let i = 0; i < slides.length; i++) {\r\n        const dot = document.createElement('li');                               /* созддаем точек ровно столько, сколько и слайдов */\r\n        dot.classList.add('dot');\r\n        dot.setAttribute('data-slide-to', i + 1);                               /* чтобы каждую из точек привязать к опред. слайду, мы присваеваем дата-атрибут. У каждой последующей точки значение атрибута будет на единицу больше */\r\n        if (i == 0) {\r\n            dot.style.opacity = 1;                                              /* у \"активной\" точки прозрачности не будет */\r\n        }\r\n        indicators.append(dot);                                                 /* помещаем созданные точки в обёртку */\r\n        dots.push(dot);                                                         /* и пушим их в массив dots для удобной работы вдальнейшем */\r\n    }\r\n\r\n    function performSliderOffset() {                                            /* функция которая \"двигает\" слайды вправо и влево */\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n    }\r\n\r\n    function deleteNotDigits(str) {                                             /* функция берет строку и удаляет в ней все нечисла (замена на пустую строку) */\r\n       return +str.replace(/\\D/g, '');\r\n    }\r\n\r\n    function settingCurrent(cntr) {                                             /* функция привязывает счетчик отображения слайда к значению slideIndex в текущий момент */\r\n        if (slides.length < 10) {\r\n            cntr.textContent = `0${sliderIndex}`;\r\n        } else {\r\n            cntr.textContent = sliderIndex;\r\n        }\r\n    }\r\n\r\n    function setDotsTransparency() {                                            /* функция, задающая прозрачность всем точкам, кроме \"активной\" */\r\n        dots.forEach(item => item.style.opacity = 0.5);                         \r\n        dots[sliderIndex - 1].style.opacity = 1;                                \r\n    }\r\n\r\n    next.addEventListener('click', () => {\r\n        if (offset == (deleteNotDigits(width) * (slides.length - 1))) {\r\n            offset = 0;\r\n        } else {\r\n            offset += deleteNotDigits(width);\r\n        }\r\n\r\n        performSliderOffset();\r\n\r\n        if (sliderIndex == slides.length) {\r\n            sliderIndex = 1;\r\n        } else {\r\n            sliderIndex++;\r\n        }\r\n\r\n        settingCurrent(current);\r\n        setDotsTransparency();\r\n    });\r\n\r\n    prev.addEventListener('click', () => {\r\n        if (offset == 0) {\r\n            offset = deleteNotDigits(width) * (slides.length - 1);\r\n        } else {\r\n            offset -= deleteNotDigits(width);\r\n        }\r\n\r\n        performSliderOffset();\r\n\r\n        if (sliderIndex == 1) {\r\n            sliderIndex = slides.length;\r\n        } else {\r\n            sliderIndex--;\r\n        }\r\n\r\n        settingCurrent(current);\r\n        setDotsTransparency();\r\n    });\r\n\r\n    dots.forEach(dot => {\r\n        dot.addEventListener('click', (e) => {\r\n            const slideTo = e.target.getAttribute('data-slide-to');               /* при клике на точку мы получаем ЗНАЧЕНИЕ дата-атрибута этой точки и кладем его в переменную */\r\n\r\n            sliderIndex = slideTo;                                                /* присваеваем это ЗНАЧЕНИЕ переменной slideIndex */\r\n            offset = deleteNotDigits(width) * (slideTo - 1);                      /* смещение слайдов будет равно произведению ширины слайдера на значение атрибута кликнутой точки минус один */\r\n            performSliderOffset();\r\n            settingCurrent(current);\r\n            setDotsTransparency();\r\n        });\r\n    });\r\n}\r\n\r\nexport default slider;"],"names":["plusModal","modalSelector","timer","modalWindow","document","querySelector","classList","add","remove","body","style","overflow","clearInterval","minusModal","addEventListener","modalTimerId","setTimeout","tabSelector","tabcontentSelector","parentSelector","classActive","tabs","querySelectorAll","tabsContent","tabsParent","hideTabsContent","forEach","item","showTabsContent","i","event","target","triggerSelector","btnСonnection","e","getAttribute","code","contains","window","showModalByScroll","pageYOffset","documentElement","clientHeight","scrollHeight","removeEventListener","modal","id","deadline","getZero","num","selector","endtime","days","hours","minutes","seconds","timeInterval","setInterval","updateClock","t","r","Date","parse","Math","floor","getTimeRemaining","innerHTML","total","setClock","MenuCard","constructor","src","alt","title","descr","price","this","parent","classes","transfer","changeToUAH","rander","elem","createElement","length","elementClass","className","append","async","res","fetch","url","ok","Error","status","json","getResource","then","data","img","cards","formSelector","showThanksModal","message","prevModalDialog","thanksModal","form","preventDefault","statusMessage","cssText","insertAdjacentElement","formData","FormData","method","headers","postData","JSON","stringify","Object","fromEntries","entries","console","log","catch","finally","reset","forms","result","sex","height","weight","age","ratio","calcTotal","textContent","round","initLocalSettings","localStorage","getItem","getStaticInformation","elements","setItem","getDinamicInformation","input","value","match","border","calc","prevArrow","nextArrow","currentCounter","totalCounter","container","wrapper","field","slide","sliderIndex","offset","prev","next","current","slidesWrapper","slidesField","slides","width","getComputedStyle","slider","position","indicators","dots","dot","setAttribute","opacity","push","performSliderOffset","transform","deleteNotDigits","str","replace","settingCurrent","cntr","setDotsTransparency","slideTo"],"sourceRoot":""}